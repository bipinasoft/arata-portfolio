{"mappings":"ACCA,SAAS,gBAAgB,CAAC,mBAAoB,WAE1C,IAAM,EAAiB,SAAS,gBAAgB,CAAC,WAEjD,SAAS,IACL,IAAM,EAAgB,AAAqB,GAArB,OAAO,WAAW,CAExC,EAAe,OAAO,CAAC,AAAA,IAGf,AAFe,EAAQ,qBAAqB,GAAG,GAAG,CAErC,GACb,EAAQ,SAAS,CAAC,GAAG,CAAC,SAE9B,EACJ,CAEA,OAAO,gBAAgB,CAAC,SAAU,GAClC,IAGA,IAAM,EAAY,SAAS,gBAAgB,CAAC,cAWtC,EAAW,IAAI,qBAAqB,AAAC,IACvC,EAAQ,OAAO,CAAC,AAAA,IACR,EAAM,cAAc,GAV5B,EAAU,OAAO,CAAC,AAAA,IACd,IAAM,EAAW,EAAI,aAAa,CAAC,mBAC7B,EAAc,EAAS,YAAY,CAAC,iBAAmB,GAC7D,CAAA,EAAS,KAAK,CAAC,KAAK,CAAG,CAC3B,GAQQ,EAAS,SAAS,CAAC,EAAM,MAAM,EAEvC,EACJ,EAAG,CAAE,UAAW,EAAI,GAEpB,EAAU,OAAO,CAAC,AAAA,GAAO,EAAS,OAAO,CAAC,IAG1C,SAAS,gBAAgB,CAAC,gBAAgB,OAAO,CAAC,AAAA,IAC9C,EAAO,gBAAgB,CAAC,QAAS,SAAS,CAAC,EACvC,EAAE,cAAc,GAChB,IAAM,EAAS,SAAS,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,QACpD,CAAA,GACA,EAAO,cAAc,CAAC,CAClB,SAAU,SACV,MAAO,OACX,EAER,EACJ,GAGA,IAAM,EAAc,SAAS,aAAa,CAAC,gBACvC,CAAA,GACA,EAAY,gBAAgB,CAAC,SAAU,SAAS,CAAC,EAC7C,IAAM,EAAe,IAAI,CAAC,aAAa,CAAC,yBAClC,EAAe,EAAa,WAAW,CACvC,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,kBAEpB,EAAa,WAAW,CAAG,GAC3B,EAAa,WAAW,CAAC,GAGzB,WAAW,KACP,EAAa,WAAW,CAAC,GACzB,EAAa,WAAW,CAAG,CAC/B,EAAG,IACP,EAER","sources":["<anon>","js/main.js"],"sourcesContent":["// Scroll reveal animation\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Scroll reveal\n    const revealElements = document.querySelectorAll('.reveal');\n    function checkReveal() {\n        const triggerBottom = window.innerHeight * 0.8;\n        revealElements.forEach((element)=>{\n            const elementTop = element.getBoundingClientRect().top;\n            if (elementTop < triggerBottom) element.classList.add('active');\n        });\n    }\n    window.addEventListener('scroll', checkReveal);\n    checkReveal(); // Check on initial load\n    // Skill bars animation\n    const skillBars = document.querySelectorAll('.skill-bar');\n    function animateSkillBars() {\n        skillBars.forEach((bar)=>{\n            const progress = bar.querySelector('.skill-progress');\n            const targetWidth = progress.getAttribute('data-progress') + '%';\n            progress.style.width = targetWidth;\n        });\n    }\n    // Initialize skill bars when they come into view\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                animateSkillBars();\n                observer.unobserve(entry.target);\n            }\n        });\n    }, {\n        threshold: 0.5\n    });\n    skillBars.forEach((bar)=>observer.observe(bar));\n    // Smooth scroll for navigation links\n    document.querySelectorAll('a[href^=\"#\"]').forEach((anchor)=>{\n        anchor.addEventListener('click', function(e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) target.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        });\n    });\n    // Form submission loading state\n    const contactForm = document.querySelector('#contact-form');\n    if (contactForm) contactForm.addEventListener('submit', function(e) {\n        const submitButton = this.querySelector('button[type=\"submit\"]');\n        const originalText = submitButton.textContent;\n        const spinner = document.createElement('div');\n        spinner.className = 'loading-spinner';\n        submitButton.textContent = '';\n        submitButton.appendChild(spinner);\n        // Reset button after 2 seconds (replace this with actual form submission)\n        setTimeout(()=>{\n            submitButton.removeChild(spinner);\n            submitButton.textContent = originalText;\n        }, 2000);\n    });\n});\n\n//# sourceMappingURL=arata.a8ce2397.js.map\n","// Scroll reveal animation\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Scroll reveal\r\n    const revealElements = document.querySelectorAll('.reveal');\r\n    \r\n    function checkReveal() {\r\n        const triggerBottom = window.innerHeight * 0.8;\r\n        \r\n        revealElements.forEach(element => {\r\n            const elementTop = element.getBoundingClientRect().top;\r\n            \r\n            if (elementTop < triggerBottom) {\r\n                element.classList.add('active');\r\n            }\r\n        });\r\n    }\r\n    \r\n    window.addEventListener('scroll', checkReveal);\r\n    checkReveal(); // Check on initial load\r\n    \r\n    // Skill bars animation\r\n    const skillBars = document.querySelectorAll('.skill-bar');\r\n    \r\n    function animateSkillBars() {\r\n        skillBars.forEach(bar => {\r\n            const progress = bar.querySelector('.skill-progress');\r\n            const targetWidth = progress.getAttribute('data-progress') + '%';\r\n            progress.style.width = targetWidth;\r\n        });\r\n    }\r\n    \r\n    // Initialize skill bars when they come into view\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                animateSkillBars();\r\n                observer.unobserve(entry.target);\r\n            }\r\n        });\r\n    }, { threshold: 0.5 });\r\n    \r\n    skillBars.forEach(bar => observer.observe(bar));\r\n    \r\n    // Smooth scroll for navigation links\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            const target = document.querySelector(this.getAttribute('href'));\r\n            if (target) {\r\n                target.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'start'\r\n                });\r\n            }\r\n        });\r\n    });\r\n    \r\n    // Form submission loading state\r\n    const contactForm = document.querySelector('#contact-form');\r\n    if (contactForm) {\r\n        contactForm.addEventListener('submit', function(e) {\r\n            const submitButton = this.querySelector('button[type=\"submit\"]');\r\n            const originalText = submitButton.textContent;\r\n            const spinner = document.createElement('div');\r\n            spinner.className = 'loading-spinner';\r\n            \r\n            submitButton.textContent = '';\r\n            submitButton.appendChild(spinner);\r\n            \r\n            // Reset button after 2 seconds (replace this with actual form submission)\r\n            setTimeout(() => {\r\n                submitButton.removeChild(spinner);\r\n                submitButton.textContent = originalText;\r\n            }, 2000);\r\n        });\r\n    }\r\n});\r\n"],"names":["document","addEventListener","revealElements","querySelectorAll","checkReveal","triggerBottom","window","innerHeight","forEach","element","elementTop","getBoundingClientRect","top","classList","add","skillBars","observer","IntersectionObserver","entries","entry","isIntersecting","bar","progress","querySelector","targetWidth","getAttribute","style","width","unobserve","target","threshold","observe","anchor","e","preventDefault","scrollIntoView","behavior","block","contactForm","submitButton","originalText","textContent","spinner","createElement","className","appendChild","setTimeout","removeChild"],"version":3,"file":"arata.a8ce2397.js.map"}